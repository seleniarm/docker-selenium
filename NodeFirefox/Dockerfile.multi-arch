ARG NAMESPACE
ARG VERSION
ARG AUTHORS
FROM ${NAMESPACE}/node-base:${VERSION}
LABEL authors=${AUTHORS}

ARG TARGETARCH
ARG TARGETVARIANT

ARG GECKODRIVER_VERSION=0.33.0

USER root

#=========
# Firefox
#=========
#RUN echo "deb http://deb.debian.org/debian/ sid main" >> /etc/apt/sources.list \
  # && apt-get update -qqy \
  # && apt-get -qqy install firefox-esr libavcodec-extra \
  # && apt-get -qqy install firefox libavcodec-extra \
  # && rm -rf /var/lib/apt/lists/* /var/cache/apt/*

COPY 99firefox-unstable /etc/apt/preferences.d/99firefox-unstable
RUN echo "deb http://deb.debian.org/debian/ unstable main contrib non-free" >> /etc/apt/sources.list \
  && apt-get update -qqy \
  && apt-get install libavcodec-extra -y \
  && apt-get install -t unstable firefox -y \
  && apt-get purge firefox-esr \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*

#=============
# geckodriver
#=============
RUN if [ $TARGETARCH = "arm" ] && [ $TARGETVARIANT = "v7" ]; then \
       export ARCH=armhf ; \
    else \
       export ARCH=$TARGETARCH ; \
    fi ; \
    if [ -z "$ARCH" ]; then \
       echo "*** BUILD ERROR: \$TARGETARCH must be arm64, amd64, or arm with \$TARGETVARIANT set to v7... exiting..." ; \
       exit 1 ; \
    fi ; \
    if [ "$ARCH" = "arm64" ]; then \
       wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux-aarch64.tar.gz ; \
    elif [ "$ARCH" = "armhf" ]; then \
       wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/jamesmortensen/geckodriver-arm-binaries/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux-armv7l.tar.gz ; \
    else \
       wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz ; \
    fi ; \
    tar -C /tmp -zxf /tmp/geckodriver.tar.gz ; \
    rm /tmp/geckodriver.tar.gz ; \
    mkdir -p /opt/geckodriver-bin ; \
    mv /tmp/geckodriver /opt/geckodriver-bin/geckodriver ; \
    echo "Symlinking geckodriver to /usr/local/bin/geckodriver" ; \
    ln -s /opt/geckodriver-bin/geckodriver /usr/local/bin/geckodriver ; \
    chmod 755 /usr/local/bin/geckodriver

# Workaround for issue launch Firefox Webdriver "Failed to read marionette port"
RUN mkdir -p /home/seluser/.cache /home/seluser/.mozilla /.cache \
    && chmod 777 /home/seluser/.cache /home/seluser/.mozilla /.cache

USER 1200

RUN if ! whoami &> /dev/null; then \
  if [ -w /tmp/passwd ]; then \
    echo "${USER_NAME:-default}:x:$(id -u):0:${USER_NAME:-default} user:/home/seluser:/tmp:/bin/bash" >> /tmp/passwd; \
  fi \
fi

#============================================
# Dumping Browser information for config
#============================================
RUN echo "firefox" > /opt/selenium/browser_name
RUN firefox --version | awk '{print $3}' > /opt/selenium/browser_version
RUN echo "\"moz:firefoxOptions\": {\"binary\": \"/usr/bin/firefox\"}" > /opt/selenium/browser_binary_location
